{"ast":null,"code":"const submissions = [{\n  id: 123,\n  problemName: \"Two Sum\",\n  status: \"Passed\",\n  time: \"2025-06-17 13:42\",\n  code: `function twoSum(nums, target) {\n    const map = new Map();\n    \n    for (let i = 0; i < nums.length; i++) {\n        const complement = target - nums[i];\n        \n        if (map.has(complement)) {\n            return [map.get(complement), i];\n        }\n        \n        map.set(nums[i], i);\n    }\n    \n    return [];\n}`\n}, {\n  id: 124,\n  problemName: \"Reverse String\",\n  status: \"Failed\",\n  time: \"2025-06-17 14:15\",\n  code: `function reverseString(s) {\n    // This implementation has a bug\n    return s.reverse(); // Error: strings don't have reverse method\n}`\n}, {\n  id: 125,\n  problemName: \"Valid Parentheses\",\n  status: \"Passed\",\n  time: \"2025-06-17 15:30\",\n  code: `function isValid(s) {\n    const stack = [];\n    const mapping = {\n        ')': '(',\n        '}': '{',\n        ']': '['\n    };\n    \n    for (let char of s) {\n        if (char in mapping) {\n            const topElement = stack.length ? stack.pop() : '#';\n            if (mapping[char] !== topElement) {\n                return false;\n            }\n        } else {\n            stack.push(char);\n        }\n    }\n    \n    return stack.length === 0;\n}`\n}, {\n  id: 126,\n  problemName: \"Merge Two Sorted Lists\",\n  status: \"Passed\",\n  time: \"2025-06-17 16:45\",\n  code: `function mergeTwoLists(list1, list2) {\n    const dummy = new ListNode(0);\n    let current = dummy;\n    \n    while (list1 && list2) {\n        if (list1.val <= list2.val) {\n            current.next = list1;\n            list1 = list1.next;\n        } else {\n            current.next = list2;\n            list2 = list2.next;\n        }\n        current = current.next;\n    }\n    \n    current.next = list1 || list2;\n    return dummy.next;\n}`\n}, {\n  id: 127,\n  problemName: \"Binary Search\",\n  status: \"Failed\",\n  time: \"2025-06-17 17:20\",\n  code: `function search(nums, target) {\n    let left = 0;\n    let right = nums.length; // Bug: should be nums.length - 1\n    \n    while (left < right) {\n        const mid = Math.floor((left + right) / 2);\n        \n        if (nums[mid] === target) {\n            return mid;\n        } else if (nums[mid] < target) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    \n    return -1;\n}`\n}];","map":{"version":3,"names":["submissions","id","problemName","status","time","code"],"sources":["C:/Users/nagar/OneDrive/Desktop/react/codejudge/src/data/submissions.js"],"sourcesContent":["  const submissions = [\r\n    {\r\n      id: 123,\r\n      problemName: \"Two Sum\",\r\n      status: \"Passed\",\r\n      time: \"2025-06-17 13:42\",\r\n      code: `function twoSum(nums, target) {\r\n    const map = new Map();\r\n    \r\n    for (let i = 0; i < nums.length; i++) {\r\n        const complement = target - nums[i];\r\n        \r\n        if (map.has(complement)) {\r\n            return [map.get(complement), i];\r\n        }\r\n        \r\n        map.set(nums[i], i);\r\n    }\r\n    \r\n    return [];\r\n}`\r\n    },\r\n    {\r\n      id: 124,\r\n      problemName: \"Reverse String\",\r\n      status: \"Failed\",\r\n      time: \"2025-06-17 14:15\",\r\n      code: `function reverseString(s) {\r\n    // This implementation has a bug\r\n    return s.reverse(); // Error: strings don't have reverse method\r\n}`\r\n    },\r\n    {\r\n      id: 125,\r\n      problemName: \"Valid Parentheses\",\r\n      status: \"Passed\",\r\n      time: \"2025-06-17 15:30\",\r\n      code: `function isValid(s) {\r\n    const stack = [];\r\n    const mapping = {\r\n        ')': '(',\r\n        '}': '{',\r\n        ']': '['\r\n    };\r\n    \r\n    for (let char of s) {\r\n        if (char in mapping) {\r\n            const topElement = stack.length ? stack.pop() : '#';\r\n            if (mapping[char] !== topElement) {\r\n                return false;\r\n            }\r\n        } else {\r\n            stack.push(char);\r\n        }\r\n    }\r\n    \r\n    return stack.length === 0;\r\n}`\r\n    },\r\n    {\r\n      id: 126,\r\n      problemName: \"Merge Two Sorted Lists\",\r\n      status: \"Passed\",\r\n      time: \"2025-06-17 16:45\",\r\n      code: `function mergeTwoLists(list1, list2) {\r\n    const dummy = new ListNode(0);\r\n    let current = dummy;\r\n    \r\n    while (list1 && list2) {\r\n        if (list1.val <= list2.val) {\r\n            current.next = list1;\r\n            list1 = list1.next;\r\n        } else {\r\n            current.next = list2;\r\n            list2 = list2.next;\r\n        }\r\n        current = current.next;\r\n    }\r\n    \r\n    current.next = list1 || list2;\r\n    return dummy.next;\r\n}`\r\n    },\r\n    {\r\n      id: 127,\r\n      problemName: \"Binary Search\",\r\n      status: \"Failed\",\r\n      time: \"2025-06-17 17:20\",\r\n      code: `function search(nums, target) {\r\n    let left = 0;\r\n    let right = nums.length; // Bug: should be nums.length - 1\r\n    \r\n    while (left < right) {\r\n        const mid = Math.floor((left + right) / 2);\r\n        \r\n        if (nums[mid] === target) {\r\n            return mid;\r\n        } else if (nums[mid] < target) {\r\n            left = mid + 1;\r\n        } else {\r\n            right = mid - 1;\r\n        }\r\n    }\r\n    \r\n    return -1;\r\n}`\r\n    }\r\n  ];"],"mappings":"AAAE,MAAMA,WAAW,GAAG,CAClB;EACEC,EAAE,EAAE,GAAG;EACPC,WAAW,EAAE,SAAS;EACtBC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,CAAC,EACD;EACEJ,EAAE,EAAE,GAAG;EACPC,WAAW,EAAE,gBAAgB;EAC7BC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE;AACZ;AACA;AACA;AACI,CAAC,EACD;EACEJ,EAAE,EAAE,GAAG;EACPC,WAAW,EAAE,mBAAmB;EAChCC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,CAAC,EACD;EACEJ,EAAE,EAAE,GAAG;EACPC,WAAW,EAAE,wBAAwB;EACrCC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,CAAC,EACD;EACEJ,EAAE,EAAE,GAAG;EACPC,WAAW,EAAE,eAAe;EAC5BC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,CAAC,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}